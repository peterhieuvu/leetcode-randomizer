[
    {
      "blind75": "TRUE",
      "pattern": "Arrays & Hashing",
      "problem": "Contains Duplicate",
      "link": "https://leetcode.com/problems/contains-duplicate/",
      "videoSolution": "https://youtu.be/3OamzN90kPg",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/217-Contains-Duplicate.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/217-Contains-Duplicate.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Arrays & Hashing",
      "problem": "Valid Anagram",
      "link": "https://leetcode.com/problems/valid-anagram/",
      "videoSolution": "https://youtu.be/9UtInBqnCgA",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/242-Valid-Anagrams.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/242-Valid-Anagram.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Arrays & Hashing",
      "problem": "Two Sum",
      "link": "https://leetcode.com/problems/two-sum/",
      "videoSolution": "https://www.youtube.com/watch?v=KLlXCFG5TnA",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/1-Two-Sum.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/basicprogramming/TwoSum.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Arrays & Hashing",
      "problem": "Group Anagrams",
      "link": "https://leetcode.com/problems/group-anagrams/",
      "videoSolution": "https://www.youtube.com/watch?v=vzdNOK2oB2E",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/49-Group-Anagrams.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/49-Group-Anagrams.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Arrays & Hashing",
      "problem": "Top K Frequent Elements",
      "link": "https://leetcode.com/problems/top-k-frequent-elements/",
      "videoSolution": "https://www.youtube.com/watch?v=YPTqKIgVk-k",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/347-Top-k-frequent-elements.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/heap/TopKFrequentNumbers.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Arrays & Hashing",
      "problem": "Product of Array Except Self",
      "link": "https://leetcode.com/problems/product-of-array-except-self/",
      "videoSolution": "https://www.youtube.com/watch?v=bNvIQI2wAjk",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/238-Product-of-array-except-self.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/arrays/ProductOfArrayExceptSelf.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Arrays & Hashing",
      "problem": "Valid Sudoku",
      "link": "https://leetcode.com/problems/valid-sudoku/",
      "videoSolution": "https://www.youtube.com/watch?v=TjFXEUCMqI8",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/36-Valid-Sudoku.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/36-valid-sudoku.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Arrays & Hashing",
      "problem": "Encode and Decode Strings",
      "link": "https://www.lintcode.com/problem/659/",
      "videoSolution": "https://www.youtube.com/watch?v=B1k_sxOSgv8",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/271-Encode-and-Decode-Strings.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/271-Encode-and-Decode-Strings.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Arrays & Hashing",
      "problem": "Longest Consecutive Sequence",
      "link": "https://leetcode.com/problems/longest-consecutive-sequence/",
      "videoSolution": "https://www.youtube.com/watch?v=P6RZZMu_maU",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/128-Longest-consecutive-sequence.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/arrays/LongestConsecutiveSequence.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Two Pointers",
      "problem": "Valid Palindrome",
      "link": "https://leetcode.com/problems/valid-palindrome/",
      "videoSolution": "https://www.youtube.com/watch?v=jJXJ16kPFWg",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/125-Valid-Palindrome.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/125-Valid-Palindrome.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Two Pointers",
      "problem": "Two Sum II",
      "link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",
      "videoSolution": "https://www.youtube.com/watch?v=cQ1Oz4ckceM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/167-Two-Sum-II.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/167-Two-Sum-II.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Two Pointers",
      "problem": "3Sum",
      "link": "https://leetcode.com/problems/3sum/",
      "videoSolution": "https://www.youtube.com/watch?v=jzZsG8n2R9A",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/15-3Sum.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/15-3Sum.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Two Pointers",
      "problem": "Container with Most Water",
      "link": "https://leetcode.com/problems/container-with-most-water/",
      "videoSolution": "https://www.youtube.com/watch?v=UuiTKBwPgAo",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/11-Container-With-Most-Water.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/11-Container-With-Most-Water.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Two Pointers",
      "problem": "Trapping Rain Water",
      "link": "https://leetcode.com/problems/trapping-rain-water/",
      "videoSolution": "https://www.youtube.com/watch?v=ZI2z5pq0TqA",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/42-Trapping-Rain-Water.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/42.%20Trapping%20Rain%20Water.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Sliding Window",
      "problem": "Best Time to Buy & Sell Stock",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
      "videoSolution": "https://www.youtube.com/watch?v=1pkOgXD63yU",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/121-Best-Time-To-Buy-and-Sell-Stock.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/basicprogramming/BestTimeToBuySellStock.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Sliding Window",
      "problem": "Longest Substring Without Repeating Characters",
      "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
      "videoSolution": "https://youtu.be/wiGpQwVHdE0",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/3-Longest-Substring-Without-Repeating-Characters.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/slidingWindow/LongestSubStringWithOutRepeatingCharacters.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Sliding Window",
      "problem": "Longest Repeating Character Replacement",
      "link": "https://leetcode.com/problems/longest-repeating-character-replacement/",
      "videoSolution": "https://youtu.be/gqXU1UyA8pk",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/424-Longest-Repeating-Character-Replacement.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/slidingWindow/LongestSubStringReplacementWithSameLetter.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Sliding Window",
      "problem": "Permutation in String",
      "link": "https://leetcode.com/problems/permutation-in-string/",
      "videoSolution": "https://www.youtube.com/watch?v=UbyhOgBN834",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/567-Permutation-in-String.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/slidingWindow/StringPermutation.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Sliding Window",
      "problem": "Minimum Window Substring",
      "link": "https://leetcode.com/problems/minimum-window-substring/",
      "videoSolution": "https://youtu.be/jSto0O4AJbM",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/76-Minimum-Window-Substring.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/76-Minimum-Window-Substring.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Sliding Window",
      "problem": "Sliding Window Maximum",
      "link": "https://leetcode.com/problems/sliding-window-maximum/",
      "videoSolution": "https://www.youtube.com/watch?v=DfljaUwZsOk",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/239-Sliding-Window-Maximum.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/slidingWindow/SlidingWindowMax.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Stack",
      "problem": "Valid Parentheses",
      "link": "https://leetcode.com/problems/valid-parentheses/",
      "videoSolution": "https://youtu.be/WTzjTskDFMg",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/20-Valid-Parentheses.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/strings/ValidParentheses.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Stack",
      "problem": "Min Stack",
      "link": "https://leetcode.com/problems/min-stack/",
      "videoSolution": "https://www.youtube.com/watch?v=qkLl7nAwDPo",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/155-Min-Stack.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/stacks/MinStack.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Stack",
      "problem": "Evaluate Reverse Polish Notation",
      "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/",
      "videoSolution": "https://youtu.be/iu0082c4HDE",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/150-Evaluate-Reverse-Polish-Notation.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/stacks/ReversePolishNotation.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Stack",
      "problem": "Generate Parentheses",
      "link": "https://leetcode.com/problems/generate-parentheses/",
      "videoSolution": "https://www.youtube.com/watch?v=s9fokUqJ76A",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/22-Generate-Parentheses.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Stack",
      "problem": "Daily Temperatures",
      "link": "https://leetcode.com/problems/daily-temperatures/",
      "videoSolution": "https://www.youtube.com/watch?v=cTBiBSnjO3c",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/739-Daily-Temperatures.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/stacks/DailyTemperatures.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Stack",
      "problem": "Car Fleet",
      "link": "https://leetcode.com/problems/car-fleet/",
      "videoSolution": "https://www.youtube.com/watch?v=Pr6T-3yB9RM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/853-Car-Fleet.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Stack",
      "problem": "Largest Rectangle in Histogram",
      "link": "https://leetcode.com/problems/largest-rectangle-in-histogram/",
      "videoSolution": "https://www.youtube.com/watch?v=zx5Sw9130L0",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/84-Largest-Rectangle-in-Histogram.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/stacks/LargestRectangleArea.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Binary Search",
      "problem": "Binary Search",
      "link": "https://leetcode.com/problems/binary-search/",
      "videoSolution": "https://www.youtube.com/watch?v=s4DPM8ct1pI",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/704-Binary-Search.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/704-Binary-Search.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Binary Search",
      "problem": "Search a 2D Matrix",
      "link": "https://leetcode.com/problems/search-a-2d-matrix/",
      "videoSolution": "https://www.youtube.com/watch?v=Ber2pi2C0j0",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/74-Search-a-2D-Matrix.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/binarysearch/SearchIn2DMatrix.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Binary Search",
      "problem": "Koko Eating Bananas",
      "link": "https://leetcode.com/problems/koko-eating-bananas/",
      "videoSolution": "https://www.youtube.com/watch?v=U2SozAs9RzA",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/875-Koko-Eating-Bananas.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/binarysearch/KokoEatsBanana.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Binary Search",
      "problem": "Search Rotated Sorted Array",
      "link": "https://leetcode.com/problems/search-in-rotated-sorted-array/",
      "videoSolution": "https://www.youtube.com/watch?v=U8XENwh8Oy8",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/33-Search-In-Rotated-Sorted-Array.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/binarysearch/SearchInRotatedSortedArray.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Binary Search",
      "problem": "Find Minimum in Rotated Sorted Array",
      "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",
      "videoSolution": "https://www.youtube.com/watch?v=nIVW4P8b1VA",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/153-Find-Minimum-in-Rotated-Sorted-Array.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Binary Search",
      "problem": "Time Based Key-Value Store",
      "link": "https://leetcode.com/problems/time-based-key-value-store/",
      "videoSolution": "https://www.youtube.com/watch?v=fu2cD_6E8Hw",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/981-Time-Based-Key-Value-Store.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/hashmap/TimeBasedMap.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Binary Search",
      "problem": "Find Median of Two Sorted Arrays",
      "link": "https://leetcode.com/problems/median-of-two-sorted-arrays/",
      "videoSolution": "https://www.youtube.com/watch?v=q6IEA26hvXc",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/4-median-of-two-sorted-arrays.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Linked List",
      "problem": "Reverse Linked List",
      "link": "https://leetcode.com/problems/reverse-linked-list/",
      "videoSolution": "https://www.youtube.com/watch?v=G0_I-ZF0S38",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/206-Reverse-Linked-List.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/inplace/linkedlistInplace/ReverseLinkedList.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Linked List",
      "problem": "Merge Two Linked Lists",
      "link": "https://leetcode.com/problems/merge-two-sorted-lists/",
      "videoSolution": "https://www.youtube.com/watch?v=XIdigk956u0",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/21-Merge-Two-Sorted-Lists.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/21-Merge-Two-Sorted-Lists.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Linked List",
      "problem": "Reorder List",
      "link": "https://leetcode.com/problems/reorder-list/",
      "videoSolution": "https://www.youtube.com/watch?v=S5bfdUTrKLM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/143-Reorder-List.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Linked List",
      "problem": "Remove Nth Node from End of List",
      "link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
      "videoSolution": "https://www.youtube.com/watch?v=XVuQxVej6y8",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/19-Remove-Nth-node-from-end-of-List.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Linked List",
      "problem": "Copy List with Random Pointer",
      "link": "https://leetcode.com/problems/copy-list-with-random-pointer/",
      "videoSolution": "https://www.youtube.com/watch?v=5Y2EiZST97Y",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/138-Copy-List-With-Random-Pointer.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Linked List",
      "problem": "Add Two Numbers",
      "link": "https://leetcode.com/problems/add-two-numbers/",
      "videoSolution": "https://www.youtube.com/watch?v=wgFPrzTjm7s",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/2-Add-Two-Numbers.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Linked List",
      "problem": "Linked List Cycle",
      "link": "https://leetcode.com/problems/linked-list-cycle/",
      "videoSolution": "https://www.youtube.com/watch?v=gBTe7lFR3vc",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/141-Linked-List-Cycle.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/fastslowpointers/LinkedListCycle.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Linked List",
      "problem": "Find the Duplicate Number",
      "link": "https://leetcode.com/problems/find-the-duplicate-number/",
      "videoSolution": "https://www.youtube.com/watch?v=wjYnzkAhcNk",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/287-Find-The-Duplicate-Number.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Linked List",
      "problem": "LRU Cache",
      "link": "https://leetcode.com/problems/lru-cache/",
      "videoSolution": "https://www.youtube.com/watch?v=7ABFKPK2hD4&t=858s",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/146-LRU-Cache.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Linked List",
      "problem": "Merge K Sorted Lists",
      "link": "https://leetcode.com/problems/merge-k-sorted-lists/",
      "videoSolution": "https://www.youtube.com/watch?v=q5a5OiGbT6Q",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/23-Merge-K-Sorted-Lists.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/kwaymerge/MergeKSortedLists.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Linked List",
      "problem": "Reverse Nodes in K-Group",
      "link": "https://leetcode.com/problems/reverse-nodes-in-k-group/",
      "videoSolution": "https://www.youtube.com/watch?v=1UOPsfP85V4",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/25-Reverse-Nodes-in-K-Group.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/inplace/linkedlistInplace/ReverseNodesInKGroup.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Invert Binary Tree",
      "link": "https://leetcode.com/problems/invert-binary-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=OnSn2XEQ4MY",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/226-Invert-Binary-Tree.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/recursion/InvertATree.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Maximum Depth of Binary Tree",
      "link": "https://leetcode.com/problems/maximum-depth-of-binary-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=hTM3phVI6YQ&lc=UgxUajmaDDsmZ5Tp0U54AaABAg",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/104-Maximum-Depth-of-Binary-Tree.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/recursion/MaxDepthOfTree.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Trees",
      "problem": "Diameter of a Binary Tree",
      "link": "https://leetcode.com/problems/diameter-of-binary-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=bkxqA8Rfv04",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/543-Diameter-of-Binary-Tree.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/543-Diameter-of-Binary-Tree.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Trees",
      "problem": "Balanced Binary Tree",
      "link": "https://leetcode.com/problems/balanced-binary-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=QfJsau0ItOY",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/110-Balanced-Binary-Tree.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/tree/BalancedBinaryTree.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Same Tree",
      "link": "https://leetcode.com/problems/same-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=vRbbcKXCxOw",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/100-Same-Tree.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/recursion/SameTree.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Subtree of Another Tree",
      "link": "https://leetcode.com/problems/subtree-of-another-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=E36O5SWp-LE",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/572-Subtree-of-Another-Tree.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/recursion/IsASubTree.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Lowest Common Ancestor of a BST",
      "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=gs2LMfuOR9k",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/236-Lowest-Common-Ancestor-of-a-Binary-Tree.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Binary Tree Level Order Traversal",
      "link": "https://leetcode.com/problems/binary-tree-level-order-traversal/",
      "videoSolution": "https://www.youtube.com/watch?v=6ZnyEApgFYg",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/102-Binary-Tree-Level-Order-Traversal.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Trees",
      "problem": "Binary Tree Right Side View",
      "link": "https://leetcode.com/problems/binary-tree-right-side-view/",
      "videoSolution": "https://www.youtube.com/watch?v=d4zLyf32e3I",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/199-Binary-Tree-Right-Side-View.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Trees",
      "problem": "Count Good Nodes in a Binary Tree",
      "link": "https://leetcode.com/problems/count-good-nodes-in-binary-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=7cp5imvDzl4",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/1448-Count-Good-Nodes-in-Binary-Tree.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dfs/CountGoodNodes.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Validate Binary Search Tree",
      "link": "https://leetcode.com/problems/validate-binary-search-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=s6ATEkipzow",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/98-Validate-Binary-Search-Tree.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/98-Validate-Binary-Search-Tree.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Kth Smallest Element in a BST",
      "link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/",
      "videoSolution": "https://www.youtube.com/watch?v=5LUXSvjmGCw",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/230-Kth-Smallest-Element-in-a-BST.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Construct Tree from Preorder and Inorder Traversal",
      "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",
      "videoSolution": "https://www.youtube.com/watch?v=ihj4IQGZ2zc",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Binary Tree Max Path Sum",
      "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/",
      "videoSolution": "https://www.youtube.com/watch?v=Hr5cWUld4vU",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/124-Binary-Tree-Maximum-Path-Sum.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Trees",
      "problem": "Serialize and Deserialize Binary Tree",
      "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=u4JAi2JJhI8",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/297-Serialize-and-Deserialize-Binary-Tree.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dfs/SerializeDeserializeTree.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Tries",
      "problem": "Implement Trie",
      "link": "https://leetcode.com/problems/implement-trie-prefix-tree/",
      "videoSolution": "https://www.youtube.com/watch?v=oobqoCJlHA0",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/208-Implement-Trie.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/208-Implement-Trie(Prefix%20Tree).java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Tries",
      "problem": "Design Add and Search Word Data Structure",
      "link": "https://leetcode.com/problems/design-add-and-search-words-data-structure/",
      "videoSolution": "https://www.youtube.com/watch?v=BTf05gs_8iU",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/211-Design-Add-and-Search-Words-Data-Structure.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/trie/WordDictionary.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Tries",
      "problem": "Word Search II",
      "link": "https://leetcode.com/problems/word-search-ii/",
      "videoSolution": "https://www.youtube.com/watch?v=asbcE9mZz_U",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/212-Word-Search-II.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/trie/WordSearchII.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Heap / Priority Queue",
      "problem": "Kth Largest Element in a Stream",
      "link": "https://leetcode.com/problems/kth-largest-element-in-a-stream/",
      "videoSolution": "https://www.youtube.com/watch?v=hOjcdrqMoQ8",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/703-Kth-Largest-Element-in-a-Stream.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/heap/KThLargestInStream.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Heap / Priority Queue",
      "problem": "Last Stone Weight",
      "link": "https://leetcode.com/problems/last-stone-weight/",
      "videoSolution": "https://www.youtube.com/watch?v=B-QCq79-Vfw",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/1046-Last-Stone-Weight.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/heap/LastStoneWeight.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Heap / Priority Queue",
      "problem": "K Closest Points to Origin",
      "link": "https://leetcode.com/problems/k-closest-points-to-origin/",
      "videoSolution": "https://www.youtube.com/watch?v=rI2EBUEMfTk",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/973-K-Closest-Points-to-Origin.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/heap/KClosestPointsToOrigin.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Heap / Priority Queue",
      "problem": "Kth Largest Element in an Array",
      "link": "https://leetcode.com/problems/kth-largest-element-in-an-array/",
      "videoSolution": "https://www.youtube.com/watch?v=XEmy13g1Qxc",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/215-Kth-Largest-Element-in-an-Array.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Heap / Priority Queue",
      "problem": "Task Scheduler",
      "link": "https://leetcode.com/problems/task-scheduler/",
      "videoSolution": "https://www.youtube.com/watch?v=s8p8ukTyA2I",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/621-Task-Scheduler.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/heap/TaskScheduler.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Heap / Priority Queue",
      "problem": "Design Twitter",
      "link": "https://leetcode.com/problems/design-twitter/",
      "videoSolution": "https://www.youtube.com/watch?v=pNichitDD2E",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/355-Design-Twitter.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/designs/DesignTwitter.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Heap / Priority Queue",
      "problem": "Find Median from Data Stream",
      "link": "https://leetcode.com/problems/find-median-from-data-stream/",
      "videoSolution": "https://www.youtube.com/watch?v=itmhHWaHupI",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/295-Find-Median-from-Data-Stream.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Backtracking",
      "problem": "Subsets",
      "link": "https://leetcode.com/problems/subsets/",
      "videoSolution": "https://www.youtube.com/watch?v=REOH22Xwdkk",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/78-Subsets.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/subsets/Subsets.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Backtracking",
      "problem": "Combination Sum",
      "link": "https://leetcode.com/problems/combination-sum/",
      "videoSolution": "https://www.youtube.com/watch?v=GBKI9VSKdGg",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/39-Combination-Sum.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/backtracking/CombinationSum.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Backtracking",
      "problem": "Permutations",
      "link": "https://leetcode.com/problems/permutations/",
      "videoSolution": "https://www.youtube.com/watch?v=s7AvT7cGdSo",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/46-Permutations.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/backtracking/Permutation.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Backtracking",
      "problem": "Subsets II",
      "link": "https://leetcode.com/problems/subsets-ii/",
      "videoSolution": "https://www.youtube.com/watch?v=Vn2v6ajA7U0",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/90-Subsets-II.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Backtracking",
      "problem": "Combination Sum II",
      "link": "https://leetcode.com/problems/combination-sum-ii/",
      "videoSolution": "https://www.youtube.com/watch?v=rSA3t6BDDwg",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/40-Combination-Sum-II.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Backtracking",
      "problem": "Word Search",
      "link": "https://leetcode.com/problems/word-search/",
      "videoSolution": "https://www.youtube.com/watch?v=pfiQ_PS1g8E",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/79-Word-Search.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dfs/WordSearch.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Backtracking",
      "problem": "Palindrome Partitioning",
      "link": "https://leetcode.com/problems/palindrome-partitioning/",
      "videoSolution": "https://www.youtube.com/watch?v=3jvWodd7ht0",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/131-Palindrome-Partitioning.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/131-Palindrome-Partitioning.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Backtracking",
      "problem": "Letter Combinations of a Phone Number",
      "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
      "videoSolution": "https://www.youtube.com/watch?v=0snEunUacZY",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/17-Letter-Combinations-of-a-Phone-Number.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/backtracking/LetterCombinations.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Backtracking",
      "problem": "N-Queens",
      "link": "https://leetcode.com/problems/n-queens/",
      "videoSolution": "https://www.youtube.com/watch?v=Ph95IHmRp5M",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/51-N-Queens.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/backtracking/NQueens.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Graphs",
      "problem": "Number of Islands",
      "link": "https://leetcode.com/problems/number-of-islands/",
      "videoSolution": "https://www.youtube.com/watch?v=pV2kpPD66nE",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/200-Number-of-Islands.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/grid/NumberOfIslands.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Graphs",
      "problem": "Clone Graph",
      "link": "https://leetcode.com/problems/clone-graph/",
      "videoSolution": "https://www.youtube.com/watch?v=mQeF6bN8hMk",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/133-Clone-Graph.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/graphs/CloneGraph.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Graphs",
      "problem": "Max Area of Island",
      "link": "https://leetcode.com/problems/max-area-of-island/",
      "videoSolution": "https://www.youtube.com/watch?v=iJGr1OtmH0c",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/695-Max-Area-of-Island.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Graphs",
      "problem": "Pacific Atlantic Waterflow",
      "link": "https://leetcode.com/problems/pacific-atlantic-water-flow/",
      "videoSolution": "https://www.youtube.com/watch?v=s-VkcjHqkGI",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/417-Pacific-Atlantic-Waterflow.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Graphs",
      "problem": "Surrounded Regions",
      "link": "https://leetcode.com/problems/surrounded-regions/",
      "videoSolution": "https://www.youtube.com/watch?v=9z2BunfoZ5Y",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/130-Surrounded-Regions.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Graphs",
      "problem": "Rotting Oranges",
      "link": "https://leetcode.com/problems/rotting-oranges/",
      "videoSolution": "https://www.youtube.com/watch?v=y704fEOx0s0",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/994-Rotting-Oranges.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/grid/RottenOrange.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Graphs",
      "problem": "Walls and Gates",
      "link": "https://www.lintcode.com/problem/663/",
      "videoSolution": "https://www.youtube.com/watch?v=e69C6xhiSQE",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/286-Walls-and-Gates.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Graphs",
      "problem": "Course Schedule",
      "link": "https://leetcode.com/problems/course-schedule/",
      "videoSolution": "https://www.youtube.com/watch?v=EgI5nU9etnU",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/207-Course-Schedule.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Graphs",
      "problem": "Course Schedule II",
      "link": "https://leetcode.com/problems/course-schedule-ii/",
      "videoSolution": "https://www.youtube.com/watch?v=Akt3glAwyfY",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/210-Course-Schedule-II.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Graphs",
      "problem": "Redundant Connection",
      "link": "https://leetcode.com/problems/redundant-connection/",
      "videoSolution": "https://www.youtube.com/watch?v=FXWRE67PLL0",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/684-Redundant-Connection.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Graphs",
      "problem": "Number of Connected Componenents in Graph",
      "link": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/",
      "videoSolution": "https://www.youtube.com/watch?v=8f1XPm4WOUc",
      "difficulty": "Medium",
      "python": "",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/graphs/NumberOfConnectedComponents.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Graphs",
      "problem": "Graph Valid Tree",
      "link": "https://www.lintcode.com/problem/graph-valid-tree/description",
      "videoSolution": "https://www.youtube.com/watch?v=bXsUuownnoQ",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/261-Graph-Valid-Tree.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Graphs",
      "problem": "Word Ladder",
      "link": "https://leetcode.com/problems/word-ladder/",
      "videoSolution": "https://www.youtube.com/watch?v=h9iTnkgv05E",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/127-Word-Ladder.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/bfs/WordLadder.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Advanced Graphs",
      "problem": "Reconstruct Itinerary",
      "link": "https://leetcode.com/problems/reconstruct-itinerary/",
      "videoSolution": "https://www.youtube.com/watch?v=ZyB_gQ8vqGA",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/332-Reconstruct-Itinerary.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dfs/ReconstructItinerary.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Advanced Graphs",
      "problem": "Min Cost to Connect all Points",
      "link": "https://leetcode.com/problems/min-cost-to-connect-all-points/",
      "videoSolution": "https://www.youtube.com/watch?v=f7JOBJIC-NA",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/1584-Min-Cost-to-Connect-all-Points.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Advanced Graphs",
      "problem": "Network Delay Time",
      "link": "https://leetcode.com/problems/network-delay-time/",
      "videoSolution": "https://www.youtube.com/watch?v=EaphyqKU4PQ",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/743-Network-Delay-Time.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Advanced Graphs",
      "problem": "Swim in Rising Water",
      "link": "https://leetcode.com/problems/swim-in-rising-water/",
      "videoSolution": "https://www.youtube.com/watch?v=amvrKlMLuGY",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/778-Swim-in-Rising-Water.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Advanced Graphs",
      "problem": "Alien Dictionary",
      "link": "https://www.lintcode.com/problem/892/",
      "videoSolution": "https://www.youtube.com/watch?v=6kTZYvNNyps",
      "difficulty": "Hard",
      "python": "",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/topologicalsort/AlienDictionary.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Advanced Graphs",
      "problem": "Cheapest Flights Within K Stops",
      "link": "https://leetcode.com/problems/cheapest-flights-within-k-stops/",
      "videoSolution": "https://www.youtube.com/watch?v=5eIK3zUdYmE",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/787-Cheapest-Flights-within-K-stops.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "Climbing Stairs",
      "link": "https://leetcode.com/problems/climbing-stairs/",
      "videoSolution": "https://www.youtube.com/watch?v=Y0lT9Fck7qI",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/70-Climbing-Stairs.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "1-D Dynamic Programming",
      "problem": "Min Cost Climbing Stairs",
      "link": "https://leetcode.com/problems/min-cost-climbing-stairs/",
      "videoSolution": "https://www.youtube.com/watch?v=ktmzAZWkEZ0",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/746-Min-Cost-Climbing-Stairs.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "House Robber",
      "link": "https://leetcode.com/problems/house-robber/",
      "videoSolution": "https://www.youtube.com/watch?v=73r3KWiEvyk",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/198-House-Robber.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/HouseRobberOne.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "House Robber II",
      "link": "https://leetcode.com/problems/house-robber-ii/",
      "videoSolution": "https://www.youtube.com/watch?v=rWAJCfYYOvM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/213-House-Robber-II.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/HouseRobberII.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "Longest Palindromic Substring",
      "link": "https://leetcode.com/problems/longest-palindromic-substring/",
      "videoSolution": "https://www.youtube.com/watch?v=XYQecbcd6_c",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/5-Longest-Palindromic-Substring.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/LongestPalindromeSubStrings.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "Palindromic Substrings",
      "link": "https://leetcode.com/problems/palindromic-substrings/",
      "videoSolution": "https://www.youtube.com/watch?v=4RACzI5-du8",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/647-Palindromic-Substrings.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/PalindromeSubStrings.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "Decode Ways",
      "link": "https://leetcode.com/problems/decode-ways/",
      "videoSolution": "https://www.youtube.com/watch?v=6aEyTjOwlJU",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/91-Decode-ways.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/backtracking/DecodeWays.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "Coin Change",
      "link": "https://leetcode.com/problems/coin-change/",
      "videoSolution": "https://www.youtube.com/watch?v=H9bfqozjoqs",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/322-Coin-Change.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/knapsack/unbounded/CoinChange.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "Maximum Product Subarray",
      "link": "https://leetcode.com/problems/maximum-product-subarray/",
      "videoSolution": "https://www.youtube.com/watch?v=lXVy6YWFcRM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/152-Maximum-Product-Subarray.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "Word Break",
      "link": "https://leetcode.com/problems/word-break/",
      "videoSolution": "https://www.youtube.com/watch?v=Sx9NNgInc3A",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/139-Word-Break.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/WordBreak.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "1-D Dynamic Programming",
      "problem": "Longest Increasing Subsequence",
      "link": "https://leetcode.com/problems/longest-increasing-subsequence/",
      "videoSolution": "https://www.youtube.com/watch?v=cjWnW0hdF1Y",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/300-Longest-Increasing-Subsequence.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/LongestIncreasingSubSequence.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "1-D Dynamic Programming",
      "problem": "Partition Equal Subset Sum",
      "link": "https://leetcode.com/problems/partition-equal-subset-sum/",
      "videoSolution": "https://www.youtube.com/watch?v=IsvocB5BJhw",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/416-Partition-Equal-Subset-Sum.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "2-D Dynamic Programming",
      "problem": "Unique Paths",
      "link": "https://leetcode.com/problems/unique-paths/",
      "videoSolution": "https://www.youtube.com/watch?v=IlEsdxuD4lY",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/62-Unique-Paths.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/UniquePaths.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "2-D Dynamic Programming",
      "problem": "Longest Common Subsequence",
      "link": "https://leetcode.com/problems/longest-common-subsequence/",
      "videoSolution": "https://www.youtube.com/watch?v=Ua0GhsJSlWM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/1143-Longest-Common-Subsequence.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/LongestCommonSubSequence.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Best Time to Buy/Sell Stock With Cooldown",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/",
      "videoSolution": "https://www.youtube.com/watch?v=I7j0F7AHpb8",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/309-Best-Time-To-Buy-and-Sell-Stock-With-Cooldown.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Coin Change II ",
      "link": "https://leetcode.com/problems/coin-change-2/",
      "videoSolution": "https://www.youtube.com/watch?v=Mjy4hd2xgrs",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/518-coin-change-2.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/knapsack/unbounded/CoinChangeII.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Target Sum",
      "link": "https://leetcode.com/problems/target-sum/",
      "videoSolution": "https://www.youtube.com/watch?v=g0npyaQtAQM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/494-Target-Sum.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/knapsack/zeroone/TargetSum.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Interleaving String",
      "link": "https://leetcode.com/problems/interleaving-string/",
      "videoSolution": "https://www.youtube.com/watch?v=3Rw3p9LrgvE",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/97-Interleaving-Strings.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/memoize/StringInterleave.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Longest Increasing Path in a Matrix",
      "link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/",
      "videoSolution": "https://www.youtube.com/watch?v=wCc_nd-GiEc",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/329-Longest-Increasing-Path-in-a-Matrix.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/memoize/LongestIncreasingPath.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Distinct Subsequences",
      "link": "https://leetcode.com/problems/distinct-subsequences/",
      "videoSolution": "https://www.youtube.com/watch?v=-RDzMJ33nx8",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/115-Distinct-Subsequences.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/DistinctSubSequences.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Edit Distance",
      "link": "https://leetcode.com/problems/edit-distance/",
      "videoSolution": "https://www.youtube.com/watch?v=XYi2-LPrwm4",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/72-Edit-Distance.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Burst Balloons",
      "link": "https://leetcode.com/problems/burst-balloons/",
      "videoSolution": "https://www.youtube.com/watch?v=VFskby7lUbw",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/312-Burst-Balloons.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/dynamicprogramming/BurstBalloons.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "2-D Dynamic Programming",
      "problem": "Regular Expression Matching",
      "link": "https://leetcode.com/problems/regular-expression-matching/",
      "videoSolution": "https://www.youtube.com/watch?v=HAA8mgxlov8",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/10-Regular-Expression-Matching.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Greedy",
      "problem": "Maximum Subarray",
      "link": "https://leetcode.com/problems/maximum-subarray/",
      "videoSolution": "https://www.youtube.com/watch?v=5WZl3MMT0Eg",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/53-Maximum-Subarray.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/53-Maximum-Subarray.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Greedy",
      "problem": "Jump Game",
      "link": "https://leetcode.com/problems/jump-game/",
      "videoSolution": "https://www.youtube.com/watch?v=Yan0cv2cLy8",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/55-Jump-Game.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/55-Jump-Game.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Greedy",
      "problem": "Jump Game II ",
      "link": "https://leetcode.com/problems/jump-game-ii/",
      "videoSolution": "https://www.youtube.com/watch?v=dJ7sWiOoK7g",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/45-Jump-Game-II.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Greedy",
      "problem": "Gas Station",
      "link": "https://leetcode.com/problems/gas-station/",
      "videoSolution": "https://www.youtube.com/watch?v=lJwbPZGo05A",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/134-Gas-Station.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Greedy",
      "problem": "Hand of Straights",
      "link": "https://leetcode.com/problems/hand-of-straights/",
      "videoSolution": "https://www.youtube.com/watch?v=amnrMCVd2YI",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/846-Hand-of-Straights.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Greedy",
      "problem": "Merge Triplets to Form Target Triplet",
      "link": "https://leetcode.com/problems/merge-triplets-to-form-target-triplet/",
      "videoSolution": "https://youtu.be/kShkQLQZ9K4",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/1899-Merge-Triplets-to-Form-Target-Triplet.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Greedy",
      "problem": "Partition Labels",
      "link": "https://leetcode.com/problems/partition-labels/",
      "videoSolution": "https://www.youtube.com/watch?v=B7m8UmZE-vw",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/763-Partition-Labels.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Greedy",
      "problem": "Valid Parenthesis String",
      "link": "https://leetcode.com/problems/valid-parenthesis-string/",
      "videoSolution": "https://www.youtube.com/watch?v=QhPdNS143Qg",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/678-Valid-Parenthesis-String.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/greedy/ValidString.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Intervals",
      "problem": "Insert Interval",
      "link": "https://leetcode.com/problems/insert-interval/",
      "videoSolution": "https://youtu.be/A8NUOmlwOlM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/57-Insert-Interval.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/intervals/InsertInterval.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Intervals",
      "problem": "Merge Intervals",
      "link": "https://leetcode.com/problems/merge-intervals/",
      "videoSolution": "https://youtu.be/44H3cEC2fFM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/56-Merge-Intervals.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/intervals/MergeInterval.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Intervals",
      "problem": "Non-Overlapping Intervals",
      "link": "https://leetcode.com/problems/non-overlapping-intervals/",
      "videoSolution": "https://youtu.be/nONCGxWoUfM",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/435-Non-Overlapping-Intervals.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/435-Non-Overlapping-Intervals.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Intervals",
      "problem": "Meeting Rooms",
      "link": "https://www.lintcode.com/problem/920/",
      "videoSolution": "https://youtu.be/PaJxqZVPhbg",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/252-Meeting-Rooms.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/intervals/MeetingRooms.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Intervals",
      "problem": "Meeting Rooms II",
      "link": "https://www.lintcode.com/problem/919/",
      "videoSolution": "https://youtu.be/FdzJmTCVyJU",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/253-Meeting-Rooms-ii.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Intervals",
      "problem": "Minimum Interval to Include Each Query",
      "link": "https://leetcode.com/problems/minimum-interval-to-include-each-query/",
      "videoSolution": "https://www.youtube.com/watch?v=5hQ5WWW5awQ",
      "difficulty": "Hard",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/1851-Minimum-Interval-to-Include-Each-Query.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Math & Geometry",
      "problem": "Rotate Image",
      "link": "https://leetcode.com/problems/rotate-image/",
      "videoSolution": "https://www.youtube.com/watch?v=fMSJSS7eO1w",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/48-Rotate-Image.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/48-Rotate-Image.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Math & Geometry",
      "problem": "Spiral Matrix",
      "link": "https://leetcode.com/problems/spiral-matrix/",
      "videoSolution": "https://youtu.be/BJnMZNwUk1M",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/54-Spiral-Matrix.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Math & Geometry",
      "problem": "Set Matrix Zeroes",
      "link": "https://leetcode.com/problems/set-matrix-zeroes/",
      "videoSolution": "https://www.youtube.com/watch?v=T41rL0L3Pnw",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/73-Set-Matrix-Zeroes.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Math & Geometry",
      "problem": "Happy Number",
      "link": "https://leetcode.com/problems/happy-number/",
      "videoSolution": "https://www.youtube.com/watch?v=ljz85bxOYJ0",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/202-Happy-Number.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/fastslowpointers/HappyNumber.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Math & Geometry",
      "problem": "Plus One",
      "link": "https://leetcode.com/problems/plus-one/",
      "videoSolution": "https://www.youtube.com/watch?v=jIaA8boiG1s",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/66-Plus-One.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Math & Geometry",
      "problem": "Pow(x, n)",
      "link": "https://leetcode.com/problems/powx-n/",
      "videoSolution": "https://www.youtube.com/watch?v=g9YQyYi4IQQ",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/50-Pow(x%2C%20n)",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Math & Geometry",
      "problem": "Multiply Strings",
      "link": "https://leetcode.com/problems/multiply-strings/",
      "videoSolution": "https://www.youtube.com/watch?v=1vZswirL8Y8",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/43-Multiply-Strings.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Math & Geometry",
      "problem": "Detect Squares",
      "link": "https://leetcode.com/problems/detect-squares/",
      "videoSolution": "https://www.youtube.com/watch?v=bahebearrDc",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/2013-Detect-Squares.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Bit Manipulation",
      "problem": "Single Number",
      "link": "https://leetcode.com/problems/single-number/",
      "videoSolution": "https://www.youtube.com/watch?v=qMPX1AOa83k",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/136-Single-Number.py",
      "java": "https://github.com/ndesai15/coding-java/blob/master/src/com/coding/patterns/bitwiseXOR/SingleNumberXOR.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Bit Manipulation",
      "problem": "Number of 1 Bits",
      "link": "https://leetcode.com/problems/number-of-1-bits/",
      "videoSolution": "https://youtu.be/5Km3utixwZs",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/191-Number-of-1-Bits.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Bit Manipulation",
      "problem": "Counting Bits",
      "link": "https://leetcode.com/problems/counting-bits/",
      "videoSolution": "https://youtu.be/RyBM56RIWrM",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/338-Counting-Bits.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/338-Counting-Bits.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Bit Manipulation",
      "problem": "Reverse Bits",
      "link": "https://leetcode.com/problems/reverse-bits/",
      "videoSolution": "https://youtu.be/UcoN6UjAI64",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/190-Reverse-Bits.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Bit Manipulation",
      "problem": "Missing Number",
      "link": "https://leetcode.com/problems/missing-number/",
      "videoSolution": "https://youtu.be/WnPLSRLSANE",
      "difficulty": "Easy",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/268-Missing-Number.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/268-Missing-Number.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "TRUE",
      "pattern": "Bit Manipulation",
      "problem": "Sum of Two Integers",
      "link": "https://leetcode.com/problems/sum-of-two-integers/",
      "videoSolution": "https://youtu.be/gVUrDV4tZfY",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/371-Sum-of-Two-Integers.py",
      "java": "https://github.com/neetcode-gh/leetcode/blob/main/java/371-Sum-of-Two-Integers.java",
      "cpp": "",
      "javascript": ""
    },
    {
      "blind75": "",
      "pattern": "Bit Manipulation",
      "problem": "Reverse Integer",
      "link": "https://leetcode.com/problems/reverse-integer/",
      "videoSolution": "https://www.youtube.com/watch?v=HAgLH58IgJQ",
      "difficulty": "Medium",
      "python": "https://github.com/neetcode-gh/leetcode/blob/main/7-Reverse-Integer.py",
      "java": "",
      "cpp": "",
      "javascript": ""
    }
  ]